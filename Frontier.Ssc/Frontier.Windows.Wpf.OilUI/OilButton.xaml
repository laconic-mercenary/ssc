<!-- 
 (C) 2012 

 This software is not free, and may not be used or distrubuted without
 the written consent of the author.

 @notes
    > it appears that after I click on a button, then try to disable it
        it will not dim, representing that is it is disabled.
 @author Matthew Stebbing

-->
<!--
    Provides a stylish button that goes with the oil ui framework.
    Has the same operations that are allowed for the common windows buttons.
    Can do the following:
        > set the text of the button, using the Text depedency property
        > use IsEnabled dependency property in xaml and code.
    The button will do various animations when enabled/disabled, 
    clicked, etc.
    -->
    
    <UserControl x:Class="Frontier.Library.Windows.Wpf.OilUI.OilButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" d:DesignHeight="40" d:DesignWidth="110"
             Background="Transparent"
             Name="oilButtonMain"
             IsTabStop="True"
             Focusable="True"
             IsEnabledChanged="oilButtonMain_IsEnabledChanged"
             PreviewMouseLeftButtonDown="UserControl_MouseLeftButtonDown"
             PreviewMouseLeftButtonUp="UserControl_MouseLeftButtonUp"
             PreviewKeyDown="oilButtonMain_KeyDown"
             GotFocus="oilButtonMain_GotFocus"
             LostFocus="oilButtonMain_LostFocus"
             >
    
    <!-- Resources -->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary 
                  Source="OilInternalDictionary.xaml">
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <UserControl.Triggers>
        <!-- Triggers / Events -->
        <EventTrigger RoutedEvent="UserControl.PreviewMouseLeftButtonDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.50" Duration="0:0:0.2"
                                         AutoReverse="True"/>
                        <!-- 
                        <DoubleAnimation Storyboard.TargetProperty="Height" From="60" To="57" Duration="0:0:0.3"/>
                        -->
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!-- 
            <EventTrigger RoutedEvent="UserControl.PreviewMouseLeftButtonUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.50" To="1" Duration="0:0:0.3"/>                        
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            -->
    </UserControl.Triggers>
    
    <!-- Content -->
    <Grid Background="Transparent"
          Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ActualWidth}"
          Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=ActualHeight}"
          >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Border Style="{StaticResource ButtonBorderStyle}" CornerRadius="30"
                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth}"
                Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight}">
            
            <TextBlock Foreground="White"
                       VerticalAlignment="Center" HorizontalAlignment="Center"
                       Text="{Binding ElementName=oilButtonMain, Path=Text}"
                       />
            
        </Border>
        
    </Grid>
    
    
</UserControl>
